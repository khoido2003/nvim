return {
	"nvim-tree/nvim-tree.lua",
	event = "VeryLazy",
	config = function()
		require("nvim-tree").setup({
			sync_root_with_cwd = false,
			update_cwd = false,
			hijack_netrw = false,
			reload_on_bufenter = false,
			git = {
				enable = true,
				timeout = 5000,
			},
			diagnostics = { enable = false },

			filters = {
				custom = {
					"^node_modules/",
					"^dist/",
					"^build/",
					"^target/",
					"^out/",
					"^bin/",
					"^obj/",
					"^coverage/",
					"^vendor/",
					"^.venv/",
					"^venv/",
					"^__pycache__/",
					"^.gradle/",
					"^.idea/",
					"^.vscode/",
					"^.pytest_cache/",
					"^.mypy_cache/",
					"^.cargo/",
					"^pkg/",
					"^Library/",
					"^Logs/",
					"^Temp/",
					"^Obj/",
					"^Build/",
					"^UserSettings/",

					"package%-lock%.json$",
					"yarn%.lock$",
					"pnpm%-lock%.yaml$",
					"%.csproj$",
					"%.sln$",
					"%.unityproj$",
					"%.pidb$",
					"%.booproj$",

					"%.meta$",
					"%.tmp$",
					"%.log$",
					"%.bak$",
					"%.swp$",
					"%.swo$",
					"%.pdb$",
					"%.mdb$",
					"%.opendb$",
					"%.VC%.db$",
					"%.db$",
					"%.sqlite3?$",
					"%.o$",
					"%.obj$",
					"%.class$",
					"%.pyc$",
					"%.pyo$",

					"%.jpg$",
					"%.jpeg$",
					"%.png$",
					"%.gif$",
					"%.svg$",
					"%.mp4$",
					"%.mkv$",
					"%.avi$",
					"%.mp3$",
					"%.wav$",
					"%.zip$",
					"%.tar$",
					"%.gz$",
					"%.7z$",
					"%.exe$",
					"%.dll$",
					"%.so$",
					"%.dylib$",
					"%.pdf$",

					"%.min%.js$",
					"%.min%.css$",
					"%.map$",
				},
				dotfiles = false,
				exclude = { ".gitignore", ".env", "routes" },
			},
		})
	end,
}
